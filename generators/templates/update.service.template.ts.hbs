import { {{pascalCase name}} } from '@prisma/client';

import AppError from '~/exceptions/generic.exception';
import StatusCode from '~/helpers/statusCode';
import prisma from '~/services/prisma';
import { update{{pascalCase name}}Validation } from '~/validations/{{lowerCase name}}/update.{{lowerCase name}}.validation';

export class Update{{pascalCase name}}Service {
    public static async execute(id: string, dto: {{pascalCase name}}) {
        try {
            const result = await prisma.{{lowerCase name}}.update({
                where: {
                    id,
                },
                data: { ...dto },
            });

            return result;
        } catch (error: any) {
            if (error instanceof AppError) {
                throw new AppError(error.message, error.statusCode);
            }
            throw new AppError(String(error), StatusCode.INTERNAL_SERVER_ERROR);
        }
    }
}